import os
import sys

import pygame


def load_image(name, color_key=None):
    fullname = os.path.join('', name)
    try:
        image = pygame.image.load(fullname)
    except pygame.error as message:
        print('Не удаётся загрузить:', name)
        raise SystemExit(message)
    image = image.convert_alpha()
    if color_key is not None:
        if color_key == -1:
            color_key = image.get_at((0, 0))
        image.set_colorkey(color_key)
    return image


pygame.init()
screen_size = (600, 900)
screen = pygame.display.set_mode(screen_size)
FPS = 50
running = True
clock = pygame.time.Clock()


def terminate():
    pygame.quit()
    sys.exit()


# Меню
def start_screen():
    intro_text = ["Обучение",
                  "Уровень 1",
                  "Уровень 2",
                  "Выйти"]

    menu = pygame.transform.scale(load_image('data/menu.png'), screen_size)
    screen.blit(menu, (0, 0))
    font_button = pygame.font.Font(None, 60)
    font_name = pygame.font.Font(None, 90)
    string_rendered = font_name.render('Galactic Warfare', 1, pygame.Color('white'))
    intro_rect = string_rendered.get_rect()
    intro_rect.top = 100
    intro_rect.x = (screen_size[0] - string_rendered.get_width()) // 2
    screen.blit(string_rendered, intro_rect)
    text_coord = 300
    buttons = []
    for line in intro_text:
        string_rendered = font_button.render(line, 1, pygame.Color('white'))
        intro_rect = string_rendered.get_rect()
        text_coord += 60
        intro_rect.top = text_coord
        intro_rect.x = (screen_size[0] - string_rendered.get_width()) // 2
        text_coord += intro_rect.height
        screen.blit(string_rendered, intro_rect)
        buttons.append((intro_rect.x, text_coord - 60, intro_rect.x + string_rendered.get_width(), text_coord))
    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                terminate()
            elif event.type == pygame.MOUSEBUTTONDOWN:
                print(event.pos, buttons[-1])
                if (event.pos[0] >= buttons[-1][0] and event.pos[0] <= buttons[-1][2]) and (
                        event.pos[1] >= buttons[-1][1] and event.pos[1] <= buttons[-1][3]):
                    terminate()
        pygame.display.flip()
        clock.tick(FPS)


start_screen()
